---
# Copyright (c) 2016 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- hosts: localhost
  connection: local
  tasks:
    - name: Remove local files
      file: path={{ item }} state=absent
      with_items:
        - ../openrc
        - ../admin-ciaorc
        - ../demo-ciaorc
        - ../bat-ciaorc
        - ../clouds.yaml
        - ../certificates
        - ../images/.cnci_ready
        - ../fetch
        - /tmp/go

- hosts: computes:networks
  become: yes
  tasks:
    - name: Stop services
      systemd: name={{ item }} enabled=no state=stopped
      with_items:
        - ciao-network.service
        - ciao-compute.service
        - ciao-launcher.service
        - docker.service
        - docker-cor.service
      ignore_errors: yes

    - name: Run ciao-launcher -hard-reset
      command: /usr/local/bin/ciao-launcher -hard-reset
      ignore_errors: yes

    - name: Remove CIAO Service files
      file: name={{ item }} state=absent
      with_items:
        - /etc/systemd/system/ciao-network.service
        - /etc/systemd/system/ciao-compute.service
        - /etc/systemd/system/ciao-launcher.service

- hosts: controllers
  become: yes
  tasks:
    - block:
        - name: List rbds
          command: rbd ls
          register: rbds
          changed_when: false

        - name: List snapshots
          command: rbd snap ls {{ item }}
          with_items: "{{ rbds.stdout_lines }}"
          register: rbds_snaps
          changed_when: false

        - name: List childrens
          command: rbd children {{ item.cmd[3] }}@ciao-image
          with_items: "{{ rbds_snaps.results }}"
          when: "{{ 'ciao-image' in item.stdout }}"
          register: rbds_snaps_childs

        - name: Remove childrens
          command: "rbd rm {{ item[1] }}"
          with_subelements:
            - "{{ rbds_snaps_childs.results }}"
            - stdout_lines

        - name: Unprotect snapshots
          command: rbd snap unprotect {{ item.cmd[3] }}@ciao-image
          with_items: "{{ rbds_snaps.results }}"
          when: "{{ 'ciao-image' in item.stdout }}"
          register: unprotect
          changed_when: "unprotect.rc == 0"

        - name: Remove snapshots
          command: rbd snap purge {{ item.cmd[3] }}
          with_items: "{{ rbds_snaps.results }}"
          when: "{{ 'ciao-image' in item.stdout }}"

        - name: List remaining rbds
          command: rbd ls
          register: rbds
          changed_when: false

        - name: Remove rbds
          command: rbd rm {{ item }}
          with_items: "{{ rbds.stdout_lines }}"
      ignore_errors: yes

    - name: Stop docker containers
      docker_container: name={{ item }} state=absent
      ignore_errors: yes
      with_items:
        - ciao-webui
        - ciao-keystone
        - ceph-demo

    - name: Stop and disable services
      systemd: name={{ item }} state=stopped enabled=no
      with_items:
        - docker-keystone.service
        - docker-ciao-webui.service
        - ciao-controller.service
        - ciao-scheduler.service
        - docker.service
        - docker-cor.service
      ignore_errors: yes

    - name: Remove Files
      file: name={{ item }} state=absent
      with_items:
        - /etc/keystone/ssl
        - /etc/keystone/keystone.conf
        - /var/lib/mysql/
        - /etc/systemd/system/docker-keystone.service
        - /etc/systemd/system/docker-ciao-webui.service
        - /etc/systemd/system/ciao-controller.service
        - /etc/systemd/system/ciao-scheduler.service

- hosts: controllers:computes:networks
  become: yes
  tasks:
    - name: Remove CIAO files
      file: path={{ item }} state=absent
      with_items:
        - /etc/ciao
        - /etc/pki/ciao
        - /etc/pki/keystone
        - /var/lib/ciao
        - /tmp/lock/ciao
        - /tmp/ciao-controller-stats.db
        - /tmp/ciao-controller-stats.db-shm
        - /tmp/ciao-controller-stats.db-wal
        # ClearLinux cers
        - /etc/ssl/certs/keystone_cert.pem
        # Ubuntu certs
        - /usr/local/share/ca-certificates/keystone_cert.crt
        - /etc/ssl/certs/keystone_cert.pem
        # Fedora certs
        - /etc/pki/ca-trust/source/anchors/keystone_cert.pem
        - /etc/pki/tls/certs/keystone_cert.pem

    - name: Remove CIAO files from github
      file: path={{ item }} state=absent
      with_items:
        - /usr/local/bin/ciao-controller
        - /usr/local/bin/ciao-scheduler
        - /usr/local/bin/ciao-launcher
        - /usr/local/bin/ciao-cli
        - /usr/local/bin/ciao-cert
        - /usr/local/bin/ciao-cnci-agent

    - name: Remove OBS repository (Ubuntu)
      apt_repository:
        repo: deb http://download.opensuse.org/repositories/home:/clearlinux:/preview:/ciao/xUbuntu_16.04/ /
        state: absent
      when: ansible_distribution == 'Ubuntu'

    - name: Remove OBS repository (Fedora)
      yum_repository: name=ciao state=absent
      when: ansible_os_family == 'RedHat'

    - block:
        - name: Uninstall packages (Fedora)
          dnf: name={{ item }} state=absent
          with_items:
            - xorriso
            - qemu-system-x86
            - psmisc
            - docker-engine
            - docker-ce
            - docker
            - ciao-common

        - name: Uninstall dependencies (Fedora)
          command: dnf autoremove -y
      when: ansible_os_family == "RedHat"

    - name: Uninstall packages (Ubuntu)
      apt: name={{ item }} state=absent autoremove=yes purge=yes
      with_items:
        - xorriso
        - qemu-system-x86
        - psmisc
        - docker.io
        - docker-engine
        - docker-ce
        - ciao-common
      when: ansible_os_family == "Debian"

    - block:
        - name: Uninstall bundles (ClearLinux)
          command: swupd bundle-remove {{ item }} {{ swupd_args | default('') }}
          with_items:
            - cloud-control
            - kvm-host
            - containers-basic
            - kernel-container
            - storage-cluster
            - storage-utils
          args:
            removes: /usr/share/clear/bundles/{{ item }}
      when: ansible_os_family == "Clear linux software for intel architecture"
